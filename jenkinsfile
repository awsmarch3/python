pipeline {
    agent any

    environment {
        IMAGE_NAME = 'yourdockerhubusername/python-app'
        VERSION = "${BUILD_NUMBER}"
    }

    stages {

        stage('Clone Repository') {
            steps {
                echo "üì• Cloning source code..."
                git 'https://github.com/yourusername/your-python-repo.git'
            }
        }

        stage('Set up Python') {
            steps {
                echo "üêç Setting up Python virtual environment..."
                sh '''
                    python3 -m venv venv
                    source venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo "‚úÖ Running unit tests..."
                sh '''
                    source venv/bin/activate
                    pytest || echo "No tests found"
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "üê≥ Building Docker image..."
                sh '''
                    docker build -t $IMAGE_NAME:$VERSION .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "üì§ Pushing Docker image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME:$VERSION
                    '''
                }
            }
        }

        stage('Deploy (Optional)') {
            steps {
                echo "üöÄ Deploying container (Example)..."
                sh '''
                    docker run -d -p 5000:5000 $IMAGE_NAME:$VERSION
                '''
            }
        }
    }
}
